#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <limits.h>

using namespace std;

const int n = 100000;
int sg[n];
int arr[6] = { 1, 2, 3, 4, 5, 6 };
int oo = INT_MAX;
void build(int l, int r, int idx) {

	if (l == r) {
		sg[idx] = arr[l];
		return;
	}

	int mid = (l + r) / 2;

	build(l, mid, idx * 2 + 1);
	build(mid + 1, r, idx * 2 + 2);
	sg[idx] = min(sg[idx * 2 + 1], sg[idx * 2 + 2]);
}

int query(int l, int r, int al, int ar, int idx) {

	if ((l < al && r < al) || (l > ar && r > ar)) {
		return oo;
	}
	if (l == r) {
		return sg[idx];
	}
	cout << l << " " << r << endl;
	int mid = (l + r) / 2;

	int q1 = query(l, mid, al, ar, idx * 2 + 1);
	int q2 = query(mid + 1, r, al, ar, idx * 2 + 2);
	return min(q1, q2);
}

string split(string s) {

	string ret = "";
	string tmp = "";
	int count = 0;
	for (int i = 0; i < (int) s.size(); i++) {
		if (s[i] == ' ')
			continue;
		if (s[i] == ',') {
			ret += tmp + " ";

			tmp = "";
			count++;
		} else {
			tmp += s[i];
		}
	}
	if (tmp != "") {
		ret += tmp;
		count++;
	}
	cout << count << endl;
	return ret;
}

int main() {
//	build(0, 5, 0);
//
//	cout << query(0, 5, 0, 5, 0) << endl;

	string s =
			"442, 249, 406, 112, 202, 98, 228, 99, 38, 10, 402, 505, 104, 340, 265, 317, 190, 403, 148, 276, 145, 199, 456, 489, 237, 226, 470, 342, 405, 339, 142, 234, 542, 96, 71, 297, 261, 262, 130, 119, 428, 82, 432, 219, 430, 439, 188, 397, 227, 478, 400, 111, 451, 388, 34, 303, 158, 68, 74, 502, 36, 80, 243, 508, 73, 324, 103, 325, 46, 211, 133, 144, 480, 404, 231, 416, 401, 370, 3, 48, 407, 195, 212, 300, 47, 409, 44, 21, 248, 105, 56, 319, 117, 149, 334, 455, 544, 429, 464, 143, 75, 197, 316, 292, 352, 282, 525, 194, 87, 242, 283, 333, 356, 440, 338, 100, 366, 368, 520, 129, 479, 499, 408, 496, 307, 173, 347, 101, 293, 523, 114, 5, 393, 178, 329, 394, 302, 59, 492, 175, 537, 538, 454, 217, 84, 344, 126, 360, 471, 433, 238, 465, 62, 165, 43, 139, 530, 512, 280, 312, 518, 385, 8, 29, 93, 467, 320, 64, 120, 452, 391, 358, 522, 445, 274, 240, 172, 449, 205, 18, 328, 453, 278, 536, 69, 331, 166, 92, 50, 462, 501, 27, 106, 72, 30, 11, 289, 318, 343, 245, 497, 411, 218, 363, 151, 85, 37, 337, 285, 511, 137, 426, 155, 254, 376, 136, 235, 90, 418, 60, 487, 181, 232, 486, 287, 515, 362, 86, 395, 255, 159, 527, 336, 378, 375, 115, 15, 179, 33, 67, 177, 247, 51, 424, 284, 357, 157, 162, 253, 135, 216, 122, 41, 118, 359, 209, 355, 373, 437, 23, 214, 97, 191, 447, 83, 267, 256, 20, 52, 236, 39, 259, 204, 353, 510, 55, 203, 305, 290, 206, 413, 488, 14, 380, 174, 540, 299, 463, 485, 371, 309, 186, 481, 192, 200, 156, 288, 534, 475, 382, 184, 152, 220, 189, 521, 443, 110, 160, 369, 171, 183, 468, 65, 108, 427, 423, 516, 146, 384, 138, 222, 35, 365, 163, 458, 132, 498, 372, 66, 345, 326, 396, 40, 141, 22, 491, 19, 286, 415, 434, 121, 1, 270, 313, 78, 446, 379, 392, 31, 9, 180, 420, 45, 76, 26, 460, 49, 89, 279, 54, 57, 208, 519, 241, 275, 386, 441, 533, 296, 507, 422, 109, 196, 361, 2, 4, 474, 182, 53, 310, 414, 291, 364, 61, 535, 398, 134, 24, 509, 335, 484, 263, 476, 154, 304, 25, 306, 444, 32, 266, 210, 539, 473, 322, 7, 466, 529, 436, 350, 494, 16, 161, 116, 459, 168, 301, 215, 213, 91, 438, 102, 224, 277, 13, 17, 28, 258, 70, 531, 541, 532, 315, 187, 381, 170, 272, 147, 223, 252, 421, 81, 271, 201, 164, 176, 58, 257, 321, 95, 377, 472, 113, 94, 457, 153, 469, 225, 140, 399, 281, 308, 230, 193, 390, 514, 483, 412, 327, 12, 543, 367, 493, 504, 419, 524, 198, 77, 295, 417, 389, 374, 435, 42, 330, 528, 311, 490, 387, 341, 517, 127, 298, 169, 185, 125, 233, 410, 477, 128, 239, 107, 448, 354, 221, 425, 264, 294, 323, 88, 526, 124, 351, 349, 506, 150, 348, 246, 482, 260, 251, 167, 503, 250, 268, 273, 207, 540, 332, 63, 431, 131, 383, 6, 495, 244, 346, 269, 79, 450, 513, 123, 461, 314, 229, 500";
	string s1 = "510, 492, 448, 465, 277, 302, 615, 380, 127, 51, 682, 328, 329, 513, 291, 507, 38, 106, 300, 15, 118, 273, 469, 85, 111, 262, 470, 256, 351, 109, 5, 542, 532, 336, 535, 103, 353, 91, 306, 584, 597, 12, 346, 195, 268, 400, 305, 18, 154, 404, 612, 502, 392, 511, 63, 221, 86, 335, 150, 553, 536, 213, 198, 672, 543, 210, 180, 274, 531, 194, 653, 463, 74, 429, 598, 90, 16, 648, 178, 607, 363, 156, 523, 32, 657, 467, 489, 652, 35, 571, 318, 193, 175, 218, 578, 187, 378, 222, 617, 231, 345, 339, 483, 98, 39, 215, 259, 34, 265, 348, 600, 41, 666, 606, 639, 540, 616, 170, 361, 275, 586, 276, 357, 638, 266, 121, 79, 171, 152, 332, 388, 426, 83, 94, 254, 537, 28, 487, 133, 99, 286, 123, 80, 183, 452, 330, 119, 71, 634, 556, 544, 624, 296, 49, 69, 243, 419, 323, 189, 403, 472, 61, 287, 440, 140, 242, 299, 415, 435, 420, 522, 216, 320, 229, 425, 619, 283, 281, 122, 601, 3, 342, 604, 466, 627, 325, 565, 206, 182, 134, 462, 358, 432, 105, 416, 441, 486, 233, 56, 47, 524, 77, 289, 680, 65, 88, 391, 204, 314, 362, 504, 226, 602, 308, 356, 304, 248, 569, 434, 663, 31, 538, 136, 298, 153, 151, 327, 563, 166, 64, 640, 533, 628, 143, 11, 301, 211, 527, 474, 408, 224, 374, 679, 234, 260, 473, 596, 464, 550, 177, 644, 191, 21, 551, 446, 449, 100, 200, 149, 168, 625, 529, 589, 212, 48, 636, 442, 173, 641, 534, 668, 125, 96, 176, 297, 521, 285, 315, 659, 655, 197, 137, 421, 455, 436, 108, 386, 75, 165, 558, 632, 110, 13, 365, 396, 341, 37, 411, 370, 439, 196, 272, 549, 326, 645, 245, 343, 24, 630, 36, 621, 59, 385, 496, 417, 355, 444, 608, 588, 371, 575, 303, 228, 613, 360, 525, 599, 188, 40, 162, 223, 457, 205, 6, 515, 247, 288, 130, 594, 45, 631, 331, 585, 667, 52, 4, 409, 626, 237, 618, 554, 44, 381, 662, 33, 43, 26, 561, 225, 433, 568, 271, 128, 82, 478, 8, 656, 620, 238, 514, 60, 399, 132, 30, 541, 570, 279, 526, 664, 89, 577, 322, 241, 120, 424, 148, 519, 290, 481, 643, 450, 637, 516, 203, 509, 671, 506, 23, 104, 278, 476, 418, 395, 614, 494, 282, 311, 495, 562, 669, 471, 393, 158, 174, 453, 312, 93, 642, 364, 270, 209, 27, 573, 84, 497, 406, 501, 138, 114, 675, 567, 479, 389, 603, 230, 214, 217, 17, 402, 376, 373, 482, 87, 595, 141, 142, 220, 416, 454, 129, 219, 284, 397, 240, 135, 359, 352, 484, 184, 257, 383, 456, 164, 530, 159, 235, 499, 252, 670, 677, 19, 517, 9, 208, 503, 227, 654, 76, 78, 398, 232, 518, 255, 58, 310, 167, 1, 488, 623, 498, 161, 244, 249, 124, 20, 490, 581, 81, 250, 451, 280, 491, 295, 459, 115, 67, 431, 423, 338, 354, 528, 673, 477, 192, 548, 377, 559, 201, 622, 447, 236, 101, 593, 555, 251, 139, 144, 545, 547, 458, 674, 172, 55, 319, 324, 485, 14, 387, 579, 337, 582, 660, 155, 651, 181, 7, 344, 591, 384, 317, 678, 475, 50, 57, 574, 520, 552, 113, 505, 372, 676, 661, 292, 592, 66, 564, 53, 112, 412, 428, 334, 185, 610, 665, 349, 68, 605, 126, 590, 160, 169, 207, 394, 261, 131, 681, 258, 190, 500, 2, 580, 107, 269, 493, 163, 264, 368, 146, 468, 576, 413, 650, 539, 422, 560, 390, 316, 460, 10, 309, 73, 54, 572, 375, 92, 307, 443, 25, 407, 253, 46, 347, 609, 410, 199, 202, 70, 430, 587, 427, 382, 438, 62, 658, 147, 22, 366, 267, 566, 186, 635, 445, 512, 263, 629, 42, 461, 102, 633, 313, 29, 369, 239, 340, 437, 116, 508, 480, 583, 367, 72, 321, 179, 157, 557, 293, 117, 414, 379, 405, 649, 246, 546, 401, 294, 350, 647, 333, 646, 97, 145, 95, 611";
	cout << split(s1) << endl;
	cout << ceil(sqrt(682)) << endl;

//	int c = 0 ;
//	for(int i = 1 ; i <= 545 ; i += 24 ) {
//		cout << i << " " << i + 23 << endl;
//		c ++;
//	}
//	cout << c<< endl;

	return 0;
}
//By : mohamed waleed
